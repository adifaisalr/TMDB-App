/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.activity = '1.1.0'
versions.android_gradle_plugin = '7.2.1'
versions.annotations = "1.0.0"
versions.apache_commons = "2.5"
versions.appcompat = "1.3.0"
versions.arch_core = "2.1.0"
versions.benchmark = "1.1.0-alpha01"
versions.cardview = "1.0.0"
versions.constraint_layout = "2.0.0-alpha2"
versions.core_ktx = "1.1.0"
versions.coroutines = "1.4.1"
versions.dexmaker = "2.2.0"
versions.espresso = "3.2.0"
versions.fragment = "1.2.0"
versions.glide = "4.12.0"
versions.hamcrest = "1.3"
versions.junit = "4.12"
versions.kotlin = "1.5.21"
versions.lifecycle = "2.2.0"
versions.material = "1.3.0"
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.navigation = "2.4.1"
versions.okhttp = "4.9.1"
versions.paging = "3.0.0-beta01"
versions.recyclerview = "1.2.0-beta01"
versions.retrofit = "2.9.0"
versions.robolectric = "4.2"
versions.room = "2.3.0-alpha04"
versions.timber = "4.7.1"
versions.transition = "1.3.0"
versions.work = "2.4.0"
versions.support = "28.0.0"
versions.spinkit = "1.4.0"
versions.multidex = "2.0.1"
versions.flipper = "0.96.1"
versions.soloader = "0.10.1"
versions.vectordrawable = "1.1.0"
versions.hilt = "2.38.1"
versions.mockk = "1.9.3"
versions.fb_shimmer = "0.5.0"
versions.paging = "3.1.1"
ext.versions = versions

def build_versions = [:]
build_versions.min_sdk = 23
build_versions.compile_sdk = 32
build_versions.target_sdk = 32
build_versions.build_tools = "32.0.0"
ext.build_versions = build_versions

def deps = [:]

def activity = [:]
activity.activity_ktx = "androidx.activity:activity-ktx:$versions.activity"
deps.activity = activity

def paging = [:]
paging.paging_runtime = "androidx.paging:paging-runtime:$versions.paging"
deps.paging = paging

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

deps.annotations = "androidx.annotation:annotation:$versions.annotations"

deps.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

deps.fb_shimmer = "com.facebook.shimmer:shimmer:$versions.fb_shimmer"

deps.benchmark = "androidx.benchmark:benchmark-junit4:$versions.benchmark"
deps.benchmark_gradle = "androidx.benchmark:benchmark-gradle-plugin:$versions.benchmark"

deps.cardview = "androidx.cardview:cardview:$versions.cardview"

deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"

deps.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"

deps.vectordrawable = "androidx.vectordrawable:vectordrawable:$versions.vectordrawable"

def coroutines = [:]
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
coroutines.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"
deps.coroutines = coroutines

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def fragment = [:]
fragment.runtime = "androidx.fragment:fragment:${versions.fragment}"
fragment.runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
fragment.testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.fragment = fragment

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"

deps.junit = "junit:junit:$versions.junit"

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.viewmodel_savedstate = "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

deps.material = "com.google.android.material:material:$versions.material"

deps.mockk = "io.mockk:mockk:$versions.mockk"

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def okhttp = [:]
okhttp.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
okhttp.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
deps.okhttp = okhttp

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.testing = "androidx.navigation:navigation-testing:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

deps.paging_runtime = "androidx.paging:paging-runtime:$versions.paging"

deps.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.ktx = "androidx.room:room-ktx:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

deps.timber = "com.jakewharton.timber:timber:$versions.timber"

deps.transition = "androidx.transition:transition:$versions.transition"

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def support = [:]
support.emoji = "com.android.support:support-emoji-bundled:$versions.support"
deps.support = support

deps.spinkit = "com.github.ybq:Android-SpinKit:$versions.spinkit"

deps.multidex = "androidx.multidex:multidex:$versions.multidex"

def flipper = [:]
flipper.flipper = "com.facebook.flipper:flipper:$versions.flipper"
flipper.network = "com.facebook.flipper:flipper-network-plugin:$versions.flipper"
flipper.noop = "com.facebook.flipper:flipper-noop:$versions.flipper"
deps.flipper = flipper

deps.soloader = "com.facebook.soloader:soloader:$versions.soloader"

def hilt = [:]
hilt.gradle_plugin = "com.google.dagger:hilt-android-gradle-plugin:$versions.hilt"
hilt.android = "com.google.dagger:hilt-android:$versions.hilt"
hilt.compiler = "com.google.dagger:hilt-android-compiler:$versions.hilt"
deps.hilt = hilt

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url 'https://jitpack.io' }
    handler.google()
    handler.jcenter()
}
ext.addRepos = this.&addRepos
